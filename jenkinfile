pipeline{
    agent{
        docker{
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            argv '--user root -v /var/run/docker.sock:/var/run/docker.sock.'
        }
    }

    stages{
        stage('checkout'){
        step{
           sh 'echo passed'
           git branch : 'main' url: ''  
           }
        }
    }
    stage('Build and test'){
        step{
        sh ' mvn clean package'
        }
    }
    stage('static code analysie'){
        environment{
            SONAR_URL = ""
        }
        step{
            withcredentials([string(credentialSId: 'sonarqube', variable:'SONAR_AUTH_TOKEN')])
            sh 'mvn sonar:sonar -Dsonar.login:"SONAR_AUTH_TOKEN" -Dsonar.host.url:${SONAR_URL}'
        }
    }
    stage("Build and Push Image"){
        environment{
                REGISTRY_CREDENTIAL : credentials('docker-cred')
                DOCKER_IMAGE :  bjadha/spring-app:$(Build_NUMBER)
                // DOCKER_FILE_LOCATION: "
            }
        step{
            sh 'docker build -t ${DOCKER_IMAGE}
            def dockerImage : docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred"){
                dockerImage.push()
            }
        }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = ""
            GIT_USER_NAME = ""
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "abhishek.xyz@gmail.com"
                    git config user.name "Abhishek Veeramalla"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
}