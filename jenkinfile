pipeline{
    agent{
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            argv '--user root -v /var/run/docker.sock:/var/run/docker.sock.'
        }
    }

    stages{
     stage('checkout'){
        step{
           git branch : 'main', url:'https://github.com/Bhushanj22/spring-app'
           sh 'echo passed'
           }
        }
     stage('Build and test'){
        step{
        sh ' mvn clean package'
        }
    }
     stage('static code analysie'){
        environment{
            SONAR_URL = "http://20.204.55.55:9000"
        }
        step{
            withcredentials([string(credentialSId: 'sonarID', variable:'SonarID')])
            sh 'mvn sonar:sonar -Dsonar.login:"SONAR_AUTH_TOKEN" -Dsonar.host.url:${SONAR_URL}'
        }
    }
    stage("Build and Push Image"){
        environment{
                REGISTRY_CREDENTIAL : credentials('DockerPass')
                DOCKER_IMAGE : "bjadhav22/spring-app:${Build_NUMBER}"
                // DOCKER_FILE_LOCATION: "
            }
        step{
            sh 'docker build -t ${DOCKER_IMAGE}'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https:https://hub.docker.com/', "DockerPass"){
                dockerImage.push()
            }
        }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "https://github.com/Bhushanj22/spring-app"
            GIT_USER_NAME = "Bjadhav22"
        }
        steps {
            withCredentials([string(credentialsId: 'githubToken', variable: 'GitHub Access Token')]) {
                sh '''
                    git config user.email "bhushanjadhav220398@gmail.com"
                    git config user.name "Bhushan Jadhav"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yaml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
}
